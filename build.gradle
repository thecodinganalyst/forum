plugins {
    id 'java'
    id 'org.springframework.boot' version '3.0.2-SNAPSHOT'
    id 'io.spring.dependency-management' version '1.1.0'
    id "org.sonarqube" version "3.5.0.2730"
    id "jacoco"
}

group = 'com.hevlar'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'com.fasterxml.jackson.core:jackson-core:2.14.0'
    testImplementation 'com.h2database:h2:2.1.214'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.0.1'
    testImplementation 'org.hamcrest:hamcrest:2.2'

    implementation('org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2')
    implementation('org.springdoc:springdoc-openapi-starter-common:2.0.2')
}

tasks.named('test') {
    useJUnitPlatform()
}

sonarqube {
    properties {
        property "sonar.host.url", property('sonar.host.url')
        property "sonar.projectKey", property('sonar.project.key')
        property "sonar.login", property('sonar.login')
    }
}

test{
    finalizedBy jacocoTestReport
}

jacocoTestReport{
    dependsOn test
    reports {
        xml.enabled true
    }
}